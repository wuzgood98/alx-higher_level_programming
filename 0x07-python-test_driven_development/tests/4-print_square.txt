# 4-print_square.py
# Gideon O Addo

============================
How to use 4-print_square.py
============================

This module defines a square-printing function ``print_square(size)``.

Usage
=====

``print_function(...)`` prints a square with '#'. The parameter ``size``
represents the height and width of the sqaure.

::

	>>> print_square = __import__('4-print_square').print_square
	>>> print_square(5)
	#####
	#####
	#####
	#####
	#####

::

	>>> print_square(3)
	###
	###
	###


Invalid Size
============

The paramater ```size``` must be an integer. Otherwise a TypeError is raised.

::

	>>> print_square('1')
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(1.3)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(None)
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square([1, 2, 3])
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square({'size': 4})
	Traceback (most recent call last):
	TypeError: size must be an integer

::

	>>> print_square(-1.2)
	Traceback (most recent call last):
	TypeError: size must be an integer

Invalid size value
==================

The parameter ```size``` must be >= 0. Otherwise raise a ValueError.

::

	>>> print_square(-1)
	Traceback (most recent call last):
	ValueError: size must be >= 0

At least one argument must be provided

::
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

